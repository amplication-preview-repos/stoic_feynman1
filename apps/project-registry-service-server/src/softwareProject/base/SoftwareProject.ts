/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Certificate } from "../../certificate/base/Certificate";
import { ValidateNested, IsOptional, IsDate, IsString } from "class-validator";
import { Type } from "class-transformer";
import { Component } from "../../component/base/Component";
import { Framework } from "../../framework/base/Framework";
import { Library } from "../../library/base/Library";
import { LicenseSubscription } from "../../licenseSubscription/base/LicenseSubscription";
import { Technology } from "../../technology/base/Technology";

@ObjectType()
class SoftwareProject {
  @ApiProperty({
    required: false,
    type: () => Certificate,
  })
  @ValidateNested()
  @Type(() => Certificate)
  @IsOptional()
  certificate?: Certificate | null;

  @ApiProperty({
    required: false,
    type: () => Component,
  })
  @ValidateNested()
  @Type(() => Component)
  @IsOptional()
  component?: Component | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Framework,
  })
  @ValidateNested()
  @Type(() => Framework)
  @IsOptional()
  framework?: Framework | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  handoverDate!: Date | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => Library,
  })
  @ValidateNested()
  @Type(() => Library)
  @IsOptional()
  library?: Library | null;

  @ApiProperty({
    required: false,
    type: () => LicenseSubscription,
  })
  @ValidateNested()
  @Type(() => LicenseSubscription)
  @IsOptional()
  licenseSubscription?: LicenseSubscription | null;

  @ApiProperty({
    required: false,
    type: () => Technology,
  })
  @ValidateNested()
  @Type(() => Technology)
  @IsOptional()
  technology?: Technology | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  warrantyEndDate!: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  warrantyStartDate!: Date | null;
}

export { SoftwareProject as SoftwareProject };
