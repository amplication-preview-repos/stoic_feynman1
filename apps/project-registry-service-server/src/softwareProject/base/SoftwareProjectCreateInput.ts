/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CertificateWhereUniqueInput } from "../../certificate/base/CertificateWhereUniqueInput";
import { ValidateNested, IsOptional, IsDate } from "class-validator";
import { Type } from "class-transformer";
import { ComponentWhereUniqueInput } from "../../component/base/ComponentWhereUniqueInput";
import { FrameworkWhereUniqueInput } from "../../framework/base/FrameworkWhereUniqueInput";
import { LibraryWhereUniqueInput } from "../../library/base/LibraryWhereUniqueInput";
import { LicenseSubscriptionWhereUniqueInput } from "../../licenseSubscription/base/LicenseSubscriptionWhereUniqueInput";
import { TechnologyWhereUniqueInput } from "../../technology/base/TechnologyWhereUniqueInput";

@InputType()
class SoftwareProjectCreateInput {
  @ApiProperty({
    required: false,
    type: () => CertificateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CertificateWhereUniqueInput)
  @IsOptional()
  @Field(() => CertificateWhereUniqueInput, {
    nullable: true,
  })
  certificate?: CertificateWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ComponentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ComponentWhereUniqueInput)
  @IsOptional()
  @Field(() => ComponentWhereUniqueInput, {
    nullable: true,
  })
  component?: ComponentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => FrameworkWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FrameworkWhereUniqueInput)
  @IsOptional()
  @Field(() => FrameworkWhereUniqueInput, {
    nullable: true,
  })
  framework?: FrameworkWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  handoverDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => LibraryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LibraryWhereUniqueInput)
  @IsOptional()
  @Field(() => LibraryWhereUniqueInput, {
    nullable: true,
  })
  library?: LibraryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => LicenseSubscriptionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LicenseSubscriptionWhereUniqueInput)
  @IsOptional()
  @Field(() => LicenseSubscriptionWhereUniqueInput, {
    nullable: true,
  })
  licenseSubscription?: LicenseSubscriptionWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TechnologyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TechnologyWhereUniqueInput)
  @IsOptional()
  @Field(() => TechnologyWhereUniqueInput, {
    nullable: true,
  })
  technology?: TechnologyWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  warrantyEndDate?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  warrantyStartDate?: Date | null;
}

export { SoftwareProjectCreateInput as SoftwareProjectCreateInput };
