/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  LicenseSubscription as PrismaLicenseSubscription,
  SoftwareProject as PrismaSoftwareProject,
} from "@prisma/client";

export class LicenseSubscriptionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.LicenseSubscriptionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.licenseSubscription.count(args);
  }

  async licenseSubscriptions(
    args: Prisma.LicenseSubscriptionFindManyArgs
  ): Promise<PrismaLicenseSubscription[]> {
    return this.prisma.licenseSubscription.findMany(args);
  }
  async licenseSubscription(
    args: Prisma.LicenseSubscriptionFindUniqueArgs
  ): Promise<PrismaLicenseSubscription | null> {
    return this.prisma.licenseSubscription.findUnique(args);
  }
  async createLicenseSubscription(
    args: Prisma.LicenseSubscriptionCreateArgs
  ): Promise<PrismaLicenseSubscription> {
    return this.prisma.licenseSubscription.create(args);
  }
  async updateLicenseSubscription(
    args: Prisma.LicenseSubscriptionUpdateArgs
  ): Promise<PrismaLicenseSubscription> {
    return this.prisma.licenseSubscription.update(args);
  }
  async deleteLicenseSubscription(
    args: Prisma.LicenseSubscriptionDeleteArgs
  ): Promise<PrismaLicenseSubscription> {
    return this.prisma.licenseSubscription.delete(args);
  }

  async findSoftwareProjects(
    parentId: string,
    args: Prisma.SoftwareProjectFindManyArgs
  ): Promise<PrismaSoftwareProject[]> {
    return this.prisma.licenseSubscription
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .softwareProjects(args);
  }
}
